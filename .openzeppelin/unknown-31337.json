{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
    "txHash": "0x153495055180f31548ddec83a8fae9b6d29a4728980d0c04c62c96cde440e9cc"
  },
  "proxies": [
    {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0xe3a3beff5245aec5b1cb54447d15d2959950620b67b9fb59fd1563c604740d10",
      "kind": "transparent"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x02ddfba9a24633a59dced526e428295483240c186d1c8497df377d8047ea289c",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8ed313c2a49ef8e255fd6f51d2b6580f97b3989aa206b1c23e79543b82120daf": {
      "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "txHash": "0x0174c88e007132d31cbdb41e45fab4d27e18c65a90ea690a486ef8d0d83f7c6c",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:259"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "151",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "syn",
            "offset": 0,
            "slot": "251",
            "type": "t_contract(SyntheXToken)9429",
            "contract": "SyntheXStorage",
            "src": "contracts/SyntheXStorage.sol:10"
          },
          {
            "label": "exchangeFee",
            "offset": 0,
            "slot": "252",
            "type": "t_uint256",
            "contract": "SyntheXStorage",
            "src": "contracts/SyntheXStorage.sol:13"
          },
          {
            "label": "safeCRatio",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "SyntheXStorage",
            "src": "contracts/SyntheXStorage.sol:15"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "254",
            "type": "t_contract(PriceOracle)9241",
            "contract": "SyntheXStorage",
            "src": "contracts/SyntheXStorage.sol:25"
          },
          {
            "label": "accountPools",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "SyntheXStorage",
            "src": "contracts/SyntheXStorage.sol:30"
          },
          {
            "label": "accountCollaterals",
            "offset": 0,
            "slot": "256",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "SyntheXStorage",
            "src": "contracts/SyntheXStorage.sol:35"
          },
          {
            "label": "accountCollateralBalance",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SyntheXStorage",
            "src": "contracts/SyntheXStorage.sol:40"
          },
          {
            "label": "tradingPools",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_address,t_struct(Market)12225_storage)",
            "contract": "SyntheXStorage",
            "src": "contracts/SyntheXStorage.sol:51"
          },
          {
            "label": "collaterals",
            "offset": 0,
            "slot": "259",
            "type": "t_mapping(t_address,t_struct(Market)12225_storage)",
            "contract": "SyntheXStorage",
            "src": "contracts/SyntheXStorage.sol:56"
          },
          {
            "label": "tradingPoolsList",
            "offset": 0,
            "slot": "260",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SyntheXStorage",
            "src": "contracts/SyntheXStorage.sol:61"
          },
          {
            "label": "collateralsList",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SyntheXStorage",
            "src": "contracts/SyntheXStorage.sol:66"
          },
          {
            "label": "synRewardSpeeds",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SyntheXStorage",
            "src": "contracts/SyntheXStorage.sol:77"
          },
          {
            "label": "synRewardState",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_address,t_struct(SynMarketState)12250_storage)",
            "contract": "SyntheXStorage",
            "src": "contracts/SyntheXStorage.sol:80"
          },
          {
            "label": "synBorrowerIndex",
            "offset": 0,
            "slot": "264",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "SyntheXStorage",
            "src": "contracts/SyntheXStorage.sol:83"
          },
          {
            "label": "synAccrued",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SyntheXStorage",
            "src": "contracts/SyntheXStorage.sol:86"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(PriceOracle)9241": {
            "label": "contract PriceOracle",
            "numberOfBytes": "20"
          },
          "t_contract(SyntheXToken)9429": {
            "label": "contract SyntheXToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Market)12225_storage)": {
            "label": "mapping(address => struct SyntheXStorage.Market)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(SynMarketState)12250_storage)": {
            "label": "mapping(address => struct SyntheXStorage.SynMarketState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_struct(Market)12225_storage": {
            "label": "struct SyntheXStorage.Market",
            "members": [
              {
                "label": "isEnabled",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "volatilityRatio",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "accountMembership",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(SynMarketState)12250_storage": {
            "label": "struct SyntheXStorage.SynMarketState",
            "members": [
              {
                "label": "index",
                "type": "t_uint224",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "timestamp",
                "type": "t_uint32",
                "offset": 28,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1b8e39bf7388bc5c344191598c699fe7220ab6541142139d8570128cb2e9c00e": {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x88dcb889f58bab2d71f5f9dc37c8a5e913726bd975850546fcff9f678f9e2f9a",
      "layout": {
        "solcVersion": "0.8.17",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "synthex",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(SyntheX)11676",
            "contract": "SyntheXPool",
            "src": "contracts/SyntheXPool.sol:26"
          },
          {
            "label": "synths",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SyntheXPool",
            "src": "contracts/SyntheXPool.sol:28"
          },
          {
            "label": "fee",
            "offset": 0,
            "slot": "103",
            "type": "t_uint256",
            "contract": "SyntheXPool",
            "src": "contracts/SyntheXPool.sol:29"
          },
          {
            "label": "_synthsList",
            "offset": 0,
            "slot": "104",
            "type": "t_array(t_address)dyn_storage",
            "contract": "SyntheXPool",
            "src": "contracts/SyntheXPool.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(SyntheX)11676": {
            "label": "contract SyntheX",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
